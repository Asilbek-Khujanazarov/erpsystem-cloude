name: CI/CD for Angular + .NET to Heroku

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Kodni yuklash
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Node.js ni o‘rnatish (Angular uchun)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      # 3. Angular frontendni build qilish
      - name: Build Angular App
        run: |
          cd your-angular-folder
          npm install
          npm run build --prod
          
      # 4. Angular build qilingan fayllarni backenddagi wwwroot papkaga ko‘chirish
      - name: Copy Angular dist to wwwroot
        run: |
          rm -rf your-dotnet-backend/wwwroot/*
          cp -r your-angular-folder/dist/* your-dotnet-backend/wwwroot/

      # 5. .NET SDK o‘rnatish
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      # 6. .NET dependency'larni restore qilish
      - name: Restore .NET dependencies
        run: |
          cd your-dotnet-backend
          dotnet restore

      # 7. .NET ni build qilish
      - name: Build .NET project
        run: |
          cd your-dotnet-backend
          dotnet build --configuration Release --no-restore

      # 8. Heroku'ga deploy qilish
      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.13.15
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: "asilbekpersonal@gmail.com"
          usedocker: false
        env:
          DOTNET_ROOT: /usr/share/dotnet

      # 9. EF Core migratsiyalarni ishga tushirish
      - name: Run EF migrations on Heroku
        run: |
          heroku run "dotnet ef database update" --app ${{ secrets.HEROKU_APP_NAME }}
        env:
          ConnectionStrings__DefaultConnection: ${{ secrets.DEFAULT_CONNECTION }}
